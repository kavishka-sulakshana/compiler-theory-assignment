Grammar

    0 $accept: prog $end

    1 prog: TOK_MAIN TOK_LCURL stmts TOK_RCURL

    2 stmts: ε
    3      | stmt TOK_SEMICOLON stmts

    4 stmt: TOK_INT TOK_ID
    5     | TOK_FLOAT TOK_ID
    6     | TOK_ID TOK_EQ E
    7     | TOK_PRINTVAR TOK_ID

    8 E: TOK_NUM
    9  | TOK_NUM TOK_DOT TOK_NUM
   10  | TOK_ID
   11  | E TOK_ADD E
   12  | E TOK_MUL E


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    TOK_SEMICOLON (258) 3
    TOK_ADD (259) 11
    TOK_MUL (260) 12
    TOK_DOT (261) 9
    TOK_INT (262) 4
    TOK_FLOAT (263) 5
    TOK_MAIN (264) 1
    TOK_NUM <int_val> (265) 8 9
    TOK_PRINTVAR (266) 7
    TOK_ID <str> (267) 4 5 6 7 10
    TOK_LCURL (268) 1
    TOK_RCURL (269) 1
    TOK_EQ (270) 6


Nonterminals, with rules where they appear

    $accept (16)
        on left: 0
    prog (17)
        on left: 1
        on right: 0
    stmts (18)
        on left: 2 3
        on right: 1 3
    stmt (19)
        on left: 4 5 6 7
        on right: 3
    E <e> (20)
        on left: 8 9 10 11 12
        on right: 6 11 12


State 0

    0 $accept: • prog $end

    TOK_MAIN  shift, and go to state 1

    prog  go to state 2


State 1

    1 prog: TOK_MAIN • TOK_LCURL stmts TOK_RCURL

    TOK_LCURL  shift, and go to state 3


State 2

    0 $accept: prog • $end

    $end  shift, and go to state 4


State 3

    1 prog: TOK_MAIN TOK_LCURL • stmts TOK_RCURL

    TOK_INT       shift, and go to state 5
    TOK_FLOAT     shift, and go to state 6
    TOK_PRINTVAR  shift, and go to state 7
    TOK_ID        shift, and go to state 8

    $default  reduce using rule 2 (stmts)

    stmts  go to state 9
    stmt   go to state 10


State 4

    0 $accept: prog $end •

    $default  accept


State 5

    4 stmt: TOK_INT • TOK_ID

    TOK_ID  shift, and go to state 11


State 6

    5 stmt: TOK_FLOAT • TOK_ID

    TOK_ID  shift, and go to state 12


State 7

    7 stmt: TOK_PRINTVAR • TOK_ID

    TOK_ID  shift, and go to state 13


State 8

    6 stmt: TOK_ID • TOK_EQ E

    TOK_EQ  shift, and go to state 14


State 9

    1 prog: TOK_MAIN TOK_LCURL stmts • TOK_RCURL

    TOK_RCURL  shift, and go to state 15


State 10

    3 stmts: stmt • TOK_SEMICOLON stmts

    TOK_SEMICOLON  shift, and go to state 16


State 11

    4 stmt: TOK_INT TOK_ID •

    $default  reduce using rule 4 (stmt)


State 12

    5 stmt: TOK_FLOAT TOK_ID •

    $default  reduce using rule 5 (stmt)


State 13

    7 stmt: TOK_PRINTVAR TOK_ID •

    $default  reduce using rule 7 (stmt)


State 14

    6 stmt: TOK_ID TOK_EQ • E

    TOK_NUM  shift, and go to state 17
    TOK_ID   shift, and go to state 18

    E  go to state 19


State 15

    1 prog: TOK_MAIN TOK_LCURL stmts TOK_RCURL •

    $default  reduce using rule 1 (prog)


State 16

    3 stmts: stmt TOK_SEMICOLON • stmts

    TOK_INT       shift, and go to state 5
    TOK_FLOAT     shift, and go to state 6
    TOK_PRINTVAR  shift, and go to state 7
    TOK_ID        shift, and go to state 8

    $default  reduce using rule 2 (stmts)

    stmts  go to state 20
    stmt   go to state 10


State 17

    8 E: TOK_NUM •
    9  | TOK_NUM • TOK_DOT TOK_NUM

    TOK_DOT  shift, and go to state 21

    $default  reduce using rule 8 (E)


State 18

   10 E: TOK_ID •

    $default  reduce using rule 10 (E)


State 19

    6 stmt: TOK_ID TOK_EQ E •
   11 E: E • TOK_ADD E
   12  | E • TOK_MUL E

    TOK_ADD  shift, and go to state 22
    TOK_MUL  shift, and go to state 23

    $default  reduce using rule 6 (stmt)


State 20

    3 stmts: stmt TOK_SEMICOLON stmts •

    $default  reduce using rule 3 (stmts)


State 21

    9 E: TOK_NUM TOK_DOT • TOK_NUM

    TOK_NUM  shift, and go to state 24


State 22

   11 E: E TOK_ADD • E

    TOK_NUM  shift, and go to state 17
    TOK_ID   shift, and go to state 18

    E  go to state 25


State 23

   12 E: E TOK_MUL • E

    TOK_NUM  shift, and go to state 17
    TOK_ID   shift, and go to state 18

    E  go to state 26


State 24

    9 E: TOK_NUM TOK_DOT TOK_NUM •

    $default  reduce using rule 9 (E)


State 25

   11 E: E • TOK_ADD E
   11  | E TOK_ADD E •
   12  | E • TOK_MUL E

    TOK_MUL  shift, and go to state 23

    $default  reduce using rule 11 (E)


State 26

   11 E: E • TOK_ADD E
   12  | E • TOK_MUL E
   12  | E TOK_MUL E •

    $default  reduce using rule 12 (E)
